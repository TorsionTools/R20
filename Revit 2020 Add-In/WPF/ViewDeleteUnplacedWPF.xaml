<Window x:Class="Revit_2020_Add_In.WPF.ViewDeleteUnplacedWPF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Revit_2020_Add_In.WPF"
             mc:Ignorable="d" 
             Height="700" Width="500" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Title="Delete Unused Views" Icon="../Resources/square.ico" Loaded="Window_Loaded" FontFamily="Arial Narrow" FontSize="13">
    <!--Include a  resource for the icon-->
    <Window.Resources>
        <BitmapImage x:Key="TorsionIcon" CreateOptions="IgnoreImageCache" CacheOption="OnLoad" UriSource="pack://application:,,,/Revit 2020 Add-In;component/Resources/square.ico"/>
    </Window.Resources>
    <!--Use to create a buffer around the entire window-->
    <Border Padding="10">
        <Grid>
            <!--Define the columns and specify height as needed.-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!--Define the rows needed and specify height as needed-->
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>

            <TabControl Name="TabContainer" Grid.Column="0" Grid.Row="0">
                <TabItem Name="TabViews" Header="Views">
                    <ListView x:Name="ListViewViews" Grid.Column="0" Grid.ColumnSpan="4" ItemsSource="{Binding}" Grid.Row="1" >
                        <!--Turn off the Column Headers-->
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <!--Change the View / GridView settings for the columns needed-->
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--The Check bool variable can be represented as a checkbox. See the Binding in the IsChecked property-->
                                                <CheckBox IsChecked="{Binding Check}" Checked="ViewsCheckBox_Checked" Unchecked="ViewsCheckBox_Unchecked" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <!--You can apply the Content property and bind the Sheet name to the Checkbox, but that mean
                            that selecting any part of the row checks the box. here we create a separate column and bind the Sheet name
                            to it so it looks like the same thing-->
                                    <GridViewColumn DisplayMemberBinding="{Binding Name}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
                <TabItem Name="TabViewTemplates" Header="View Templates">
                    <ListView x:Name="ListViewViewTemplates" Grid.Column="0" Grid.ColumnSpan="4" ItemsSource="{Binding}" Grid.Row="1" >
                        <!--Turn off the Column Headers-->
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <!--Change the View / GridView settings for the columns needed-->
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--The Check bool variable can be represented as a checkbox. See the Binding in the IsChecked property-->
                                                <CheckBox IsChecked="{Binding Check}" Checked="TemplateCheckBox_Checked" Unchecked="TemplateCheckBox_Unchecked" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <!--You can apply the Content property and bind the Sheet name to the Checkbox, but that mean
                            that selecting any part of the row checks the box. here we create a separate column and bind the Sheet name
                            to it so it looks like the same thing-->
                                    <GridViewColumn DisplayMemberBinding="{Binding Name}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
                <TabItem Name="TabSchedules" Header="Schedules">
                    <ListView x:Name="ListViewSchedules" Grid.Column="0" Grid.ColumnSpan="4" ItemsSource="{Binding}" Grid.Row="1" >
                        <!--Turn off the Column Headers-->
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <!--Change the View / GridView settings for the columns needed-->
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--The Check bool variable can be represented as a checkbox. See the Binding in the IsChecked property-->
                                                <CheckBox IsChecked="{Binding Check}" Checked="SchedulesCheckBox_Checked" Unchecked="SchedulesCheckBox_Unchecked" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <!--You can apply the Content property and bind the Sheet name to the Checkbox, but that mean
                            that selecting any part of the row checks the box. here we create a separate column and bind the Sheet name
                            to it so it looks like the same thing-->
                                    <GridViewColumn DisplayMemberBinding="{Binding Name}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
                <TabItem Name="TabLegends"  Header="Legends">
                    <ListView x:Name="ListViewLegends" Grid.Column="0" Grid.ColumnSpan="4" ItemsSource="{Binding}" Grid.Row="1" >
                        <!--Turn off the Column Headers-->
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </ListView.Resources>
                        <!--Change the View / GridView settings for the columns needed-->
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--The Check bool variable can be represented as a checkbox. See the Binding in the IsChecked property-->
                                                <CheckBox IsChecked="{Binding Check}" Checked="LegendsCheckBox_Checked" Unchecked="LegendsCheckBox_Unchecked" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <!--You can apply the Content property and bind the Sheet name to the Checkbox, but that mean
                            that selecting any part of the row checks the box. here we create a separate column and bind the Sheet name
                            to it so it looks like the same thing-->
                                    <GridViewColumn DisplayMemberBinding="{Binding SheetName}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
            </TabControl>
            <!--Create the buttons, name them, and tell them which grid / row to be in as well as event handlers-->
            <Button x:Name="btnCancel" Content="Cancel" Grid.Row="1" Grid.Column="0" Width="75" HorizontalAlignment="Right" Margin="5 5 80 5" Click="BtnCancel_Click" IsCancel="True" FontFamily="Arial Black" FontSize="12" BorderBrush="#60CCE0">
                <!--Used to augment the buttons and make rounded corners-->
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
            <Button Name="btnDeleteViews" Content="Delete" Grid.Row="1" Grid.Column="0" Width="75" HorizontalAlignment="Right" Margin="5 5 0 5" Click="BtnDeleteViews_Click" IsDefault="True" FontFamily="Arial Black" FontSize="12" BorderBrush="#60CCE0">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
    </Border>
</Window>
